# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python


trigger:
- master

jobs:
- job: 'Linux'
  pool:
    vmImage: 'ubuntu-latest'
  strategy:
    matrix:
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'
    maxParallel: 2

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version)'

  - script: |
      pip install --retries 3 -r requirements.txt
    displayName: 'Install dependencies'

  - script: |
      git submodule update --init --recursive
      python setup.py build_ext --build-type RelWithDebInfo
    displayName: 'Compile package'

  - script: |
      python -m pip install flake8
      flake8 --max-line-length=100 cat4py/
    displayName: 'Run lint tests'

  - script: |
      pip install pytest pytest-cov
      PYTHONPATH=. python -m pytest tests --doctest-modules --junitxml=junit/test-results.xml --cov=cat4py --cov-report=xml --cov-report=html
    displayName: 'pytest'

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testResultsFiles: '**/test-*.xml'
      testRunTitle: 'Publish test results for Python $(python.version)'

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
      reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'


- job: 'Windows'
  pool:
    vmImage: 'vs2017-win2016'
  strategy:
    matrix:
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'
    maxParallel: 2

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version)'

  - powershell: |
      Write-Host "##vso[task.setvariable variable=PATH;]${env:PYTHON};${env:PYTHON}\Scripts;${env:PATH}";
    displayName: 'Add Python paths to PATH'

  - bash: |
      pip install --retries 3 -r requirements.txt
    displayName: 'Install dependencies'

  - bash: |
      git submodule update --init --recursive
      python setup.py build_ext --build-type RelWithDebInfo --generator "NMake Makefiles" -- -DWINGEN="NMake Makefiles"
    displayName: 'Compile package'

  - bash: |
      pip install pytest pytest-cov
      PYTHONPATH=. python -m pytest tests --doctest-modules --junitxml=junit/test-results.xml --cov=cat4py --cov-report=xml --cov-report=html
    displayName: 'pytest'

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testResultsFiles: '**/test-*.xml'
      testRunTitle: 'Publish test results for Python $(python.version)'

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
      reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'

- job: 'macOS'
  pool:
    vmImage: 'macOS-latest'
  strategy:
    matrix:
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'
    maxParallel: 2

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version)'

  - script: |
      pip install --retries 3 -r requirements.txt
    displayName: 'Install dependencies'

  - script: |
      git submodule update --init --recursive
      python setup.py build_ext --build-type RelWithDebInfo
    displayName: 'Compile package'

  - script: |
      pip install pytest pytest-cov
      PYTHONPATH=. python -m pytest tests --doctest-modules --junitxml=junit/test-results.xml --cov=cat4py --cov-report=xml --cov-report=html
    displayName: 'pytest'

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testResultsFiles: '**/test-*.xml'
      testRunTitle: 'Publish test results for Python $(python.version)'

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
      reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'
