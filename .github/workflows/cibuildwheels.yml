name: Python wheels
on:
  push:
    branches:
      - master
    tags:
      - '*'

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - name: Ubuntu
            os: ubuntu-latest
            cibw_build: 'cp37-* cp38-* cp39-*'
            cibw_skip: '*-manylinux*_i686'

          - name: MacOS
            os: macos-latest
            cibw_build: 'cp37-* cp38-* cp39-*'

          - name: Windows x86
            os: windows-latest
            arch: x86
            cibw_build: 'cp37-win32 cp38-win32 cp39-win32'

          - name: Windows amd64
            os: windows-latest
            arch: amd64
            cibw_build: 'cp37-win_amd64 cp38-win_amd64 cp39-win_amd64'

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install Ninja
        uses: seanmiddleditch/gha-setup-ninja@master

      - name: Install MSVC
        if: ${{runner.os == 'Windows'}}
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.arch }}

      - name: Build wheels
        uses: pypa/cibuildwheel@v1.12.0
        with:
          output-dir: wheelhouse
        env:
          CIBW_BUILD: ${{ matrix.cibw_build }}
          CIBW_SKIP: ${{ matrix.cibw_skip }}
          CIBW_BEFORE_BUILD: python -m pip install -r requirements.txt
          CIBW_BEFORE_TEST: python -m pip install -r requirements-tests.txt
          CIBW_TEST_COMMAND: python -m pytest {project}/tests
          CIBW_BUILD_VERBOSITY: 1

      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl


  build_sdist:
    name: Build sdist
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - uses: actions/setup-python@v2
        name: Setup Python
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build

      - name: Build sdist
        run: |
          python -m build --sdist

      - name: Upload sdist package
        uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [ build_wheels, build_sdist ]  # last but not least
    runs-on: ubuntu-latest
    if: startsWith(github.event.ref, 'refs/tags')
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.blosc_pypi_secret }}
